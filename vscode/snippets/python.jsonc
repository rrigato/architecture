{
    //The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    "One arguement one return function": {
        "prefix": "f1",
        "body": [
            "def ${1:function_name}(${4:arg_one_name}: ${5:arg_one_type}) -> ${3:return_type}:",
            "    \"\"\"${2:one_sentance_docstr}",
            "    \"\"\"",
            "    logging.info(\"${1:function_name} - invocation begin\")",
            "    $0",
            "    logging.info(\"${1:function_name} - invocation end\")",
            "    return(${3:return_type})"
        ],
        "description": "One arguement one return function"
    },
    "Two arguement one return function": {
        "prefix": "f2",
        "body": [
            "def ${1:function_name}(${4:arg_one_name}: ${5:arg_one_type} ", 
            "${6:arg_two_name}: ${7:arg_two_type}) -> ${3:return_type}:",
            "    \"\"\"${2:one_sentance_docstr}",
            "    \"\"\"",
            "    logging.info(\"${1:function_name} - invocation begin\")",
            "    $0",
            "    logging.info(\"${1:function_name} - invocation end\")",
            "    return(${3:return_type})"
        ],
        "description": "Two arguement one return function"
    },
    "Three arguement one return function": {
        "prefix": "f3",
        "body": [
            "def ${1:function_name}(${4:arg_one_name}: ${5:arg_one_type}, ", 
            "${6:arg_two_name}: ${7:arg_two_type}, ",
            "${8:arg_two_name}: ${9:arg_three_type}) -> ${3:return_type}:",
            "    \"\"\"${2:one_sentance_docstr}",
            "    \"\"\"",
            "    logging.info(\"${1:function_name} - invocation begin\")",
            "    $0",
            "    logging.info(\"${1:function_name} - invocation end\")",
            "    return(${3:return_type})"
        ],
        "description": "Three arguement one return function"
    },
    "log statement for function": {
        "prefix": "f4",
        "body": [
            "logging.info(\"${1:function_name} - $0\")",
            ],
            "description": "log statement for function"
        
    },
    "test case function stub": {
        "prefix": "f5",
        "body": [
            "def test_${1:function_name}(self):",
            "    \"\"\"${2:test_case_description}\"\"\"",
            "    from ${3:project_name}.${RELATIVE_FILEPATH/.test//}$0 import ${1:function_name}",
        ],
        "description": "test case function stub"
    }
}